{"version":3,"sources":["TodoListItem.tsx","TodoList.tsx","AddTodoForm.tsx","App.tsx","index.tsx"],"names":["TodoListItem","todo","toggleTodo","style","textDecoration","complete","undefined","type","checked","onClick","text","TodoList","todos","map","AddTodoForm","addTodo","useState","setText","value","onChange","e","target","preventDefault","initialTodos","App","setTodos","selectedTodo","newTodos","newTodo","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAOaA,EAAgC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpD,OACE,6BACE,wBACEC,MAAO,CAAEC,eAAgBH,EAAKI,SAAW,oBAAiBC,GAD5D,UAGE,uBACEC,KAAK,WACLC,QAASP,EAAKI,SACdI,QAAS,WACPP,EAAWD,MAEZ,IACFA,EAAKS,WCZDC,EAA4B,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOV,EAAiB,EAAjBA,WACjD,OACE,6BACGU,EAAMC,KAAI,SAAAZ,GAAI,OACb,cAAC,EAAD,CAA8BA,KAAMA,EAAMC,WAAYA,GAAnCD,EAAKS,YCNnBI,EAA+B,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACnCC,mBAAS,IAD0B,mBACpDN,EADoD,KAC9CO,EAD8C,KAG3D,OACE,iCACE,uBACEV,KAAK,OACLW,MAAOR,EACPS,SAAU,SAAAC,GACRH,EAAQG,EAAEC,OAAOH,UAGrB,wBACEX,KAAK,SACLE,QAAS,SAAAW,GACPA,EAAEE,iBACFP,EAAQL,GACRO,EAAQ,KALZ,0BCdAM,EAAuB,CAC3B,CACEb,KAAM,eACNL,UAAU,GAEZ,CACEK,KAAM,YACNL,UAAU,IAyCCmB,MArCf,WAAgB,IAAD,EACaR,mBAASO,GADtB,mBACNX,EADM,KACCa,EADD,KA6Bb,OACM,qCACA,cAAC,EAAD,CAAUb,MAAOA,EAAOV,WA5BX,SAACwB,GAClB,IAAMC,EAAWf,EAAMC,KAAI,SAAAZ,GACzB,OAAIA,IAASyB,EACJ,2BACFzB,GADL,IAEEI,UAAWJ,EAAKI,WAGbJ,KAETwB,EAASE,MAmBL,cAAC,EAAD,CAAaZ,QAhBM,SAACL,GACxB,IAAMkB,EAAU,CAAElB,OAAML,UAAU,GACf,IAAhBuB,EAAQlB,KAETmB,MAAM,qBAINJ,EAAS,GAAD,mBAAKb,GAAL,CAAYgB,YCnC1BE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2c85ab57.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface Props {\r\n  todo: Todo;\r\n  toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoListItem: React.FC<Props> = ({ todo, toggleTodo }) => {\r\n  return (\r\n    <li>\r\n      <label\r\n        style={{ textDecoration: todo.complete ? 'line-through' : undefined }}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={todo.complete}\r\n          onClick={() => {\r\n            toggleTodo(todo);\r\n          }}\r\n        />{' '}\r\n        {todo.text}\r\n      </label>\r\n    </li>\r\n  );\r\n};","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\ninterface Props {\r\n  todos: Todo[];\r\n  toggleTodo: ToggleTodo;\r\n}\r\n\r\nexport const TodoList: React.FC<Props> = ({ todos, toggleTodo }) => {\r\n  return (\r\n    <ul>\r\n      {todos.map(todo => (\r\n        <TodoListItem key={todo.text} todo={todo} toggleTodo={toggleTodo} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};","import React, { useState } from 'react';\r\n\r\ninterface Props {\r\n  addTodo: AddTodo;\r\n}\r\n\r\nexport const AddTodoForm: React.FC<Props> = ({ addTodo }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        value={text}\r\n        onChange={e => {\r\n          setText(e.target.value);\r\n        }}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          addTodo(text);\r\n          setText('');\r\n        }}\r\n      >\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { TodoList } from './TodoList';\nimport { AddTodoForm } from './AddTodoForm';\n\nconst initialTodos: Todo[] = [\n  {\n    text: 'Walk the dog',\n    complete: false,\n  },\n  {\n    text: 'Write app',\n    complete: true,\n  },\n];\n\nfunction App() {\n  const [todos, setTodos] = useState(initialTodos);\n\n  const toggleTodo = (selectedTodo: Todo) => {\n    const newTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }\n      return todo;\n    });\n    setTodos(newTodos);\n  };\n\n  const addTodo: AddTodo = (text: string) => {\n    const newTodo = { text, complete: false };\n    if(newTodo.text == \"\")\n    {\n      alert(\"Please enter text\");\n    }\n    else\n    {\n      setTodos([...todos, newTodo]);\n    }   \n  };\n\n\n  return ( \n        <>\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\n        <AddTodoForm addTodo={addTodo} />\n        </>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}